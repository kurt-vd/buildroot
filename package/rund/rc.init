#!/bin/sh

if [ "$1" = "-noinit" ]; then
	# protect against exec'd instance of rund
	exit 0;
fi

PATH=/usr/sbin:/sbin:/usr/bin:/bin

echo "[`ktstamp -k`] start system ..."
# export PATH to rund
runc env PATH=$PATH

# mount filesystems
mount -tproc proc /proc
mount -tsysfs sys /sys
mount -ttmpfs tmp /tmp
mount -ttmpfs run /run

# start device manager
## DEVICE MANAGER START
## fdev START
echo "" > /proc/sys/kernel/hotplug
mount -ttmpfs dev /dev
mknod /dev/console c 5 1
mknod /dev/null c 1 3
mknod /dev/zero c 1 5
runc add DETACH=0 fdev -b --wait=0
sockwait -r0.1 -f /dev/.fdev.coldplugged &
## fdev DONE
## devtmpfs START
if ! mount | grep -q " /dev "; then
	mount -tdevtmpfs dev /dev
fi
## devtmpfs DONE
## udev START
echo "" > /proc/sys/kernel/hotplug
if ! mount | grep -q " /dev "; then
	mount -tdevtmpfs dev /dev
fi
# code from slackware rc.udev
udevd --daemon
udevadm trigger --type=subsystems --action=add
udevadm trigger --type=devices --action=add
udevadm settle --timeout=120 &
## udev DONE
## DEVICE MANAGER DONE

mkdir -p /dev/pts
mount -tdevpts devpts /dev/pts
# mount tmpfs for media mount points
mount -ttmpfs nodev /media

ip link set lo up
#ip addr add 127.0.0.1/8 dev lo

hostname -F /etc/hostname

# without device manager, add watchdog triggers here
for WDT in /dev/watchdog?; do runc watchdog add $WDT 1; done

echo "[`ktstamp -k`] restore state ..."

# hardware clock
# not all systems come with an RTC ...
if [ -c /dev/rtc0 ]; then
	hwclock -s -l &
fi

if [ -x /etc/persistentfs.sh ]; then
	/etc/persistentfs.sh
fi

echo "[`ktstamp -k`] start services ..."

# terminal
#runc add agetty -i -a root -L ttyS0 115200 vt100
runc add getty ttyS0 115200 vt100

# start services
for SVC in /etc/rc.local.d/*; do
	if [ -x "$SVC" ]; then
		"$SVC" "$@"
	fi
done

if [ -x /etc/rc.local ]; then
	echo "[`ktstamp -k`] run /etc/rc.local ..."
	/etc/rc.local "$@"
fi

if [ -x /opt/etc/rc.local ]; then
	echo "[`ktstamp -k`] run /opt/etc/rc.local ..."
	/opt/etc/rc.local "$@"
fi

echo "[`ktstamp -k`] system up"
