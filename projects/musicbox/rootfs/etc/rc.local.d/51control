#!/bin/sh
#!/bin/sh

echo "[`ktstamp -k`] Start control"

LED=/sys/class/leds/mcpm
AMP=/sys/class/leds/amplifier

# kill entire group, after unregistering the trap handler
# This will successfully kill child processes in a pipe
trap 'trap - TERM INT; kill -TERM -$$' TERM INT

case "$1" in
ctrl)
        while read TIME CODE VALUE; do
	if timeofday 6h45 19h15; then
		TYPE=d
	else
		TYPE=n
	fi
	# only process keyup
	case "$CODE:$VALUE" in
	KEY_SYSRQ:long)
		poweroff
		;;
	KEY_?:1)
		# save last touch time
		PREVTOUCH=`stat -f '%Y' /tmp/btntouched`
		touch /tmp/btntouched
		# test for 'start sleep timer'
		if timeofday 18h00 20h00; then
			if [ $(( `date '+%s' - "$PREVTOUCH" )) -gt 3600]; then
				# first touch since last 2 hours. Start sleep timer
				mosquitt_pub -t alarms/sleeptimer/state -m on
				continue
			fi
		fi
		# stop when playing
		# start new when stopped
		eval export `mpdstate -1 | sed -e "s/\t/=/" -e "s/:/_/g" -e "s/^/mpd_/g"`
		if [ "$mpd_state" == "play" ]; then
			# stop
			mpc -q clear
		else
			# mpc -q clear
			mplay 1 playlist z${TYPE}${CODE##KEY_}
		fi
		;;
	#*:long)
	#	not really usefull if a short keypress toggles between play & pause
	#	mpc -q clear
	#	# leave qeueue empty
	#	;;
	esac
        done
        ;;
alrm)
	mosquitto_sub -v -t alarms/+/state -t alarms//alarms | while read TOPIC VALUE; do
		ALARMNAME=`echo "$TOPIC" | sed -"s,/[^/]*$,,g" -e "s,^.*/,,g"`
		/root/alarm.sh "$ALARMNAME" "$VALUE"
	done
	;;
amp)
	# emit MPD's play state to a (green) led

	echo none > $AMP/trigger
	echo oneshot > $LED/trigger
	echo 255 > $LED/brightness
	sockwait /run/mpd.sock
	mpdstate | while read PROP VALUE; do
	case "$PROP:$VALUE" in
	state:play)
		if timeofday 8h00 18h30; then
			echo timer > $LED/trigger
			echo 150 > $LED/delay_on
			echo 150 > $LED/delay_off
		else
			echo none > $LED/trigger
			echo 255 > $LED/brightness
		fi
		echo 255 > $AMP/brightness
		;;
	state:*)
		echo none > $LED/trigger
		echo 0 > $LED/brightness
		echo 0 > $AMP/brightness
		;;
	esac
	done
	;;
*)
	echo heartbeat > /sys/class/leds/ACT/trigger
	echo 0 > /sys/class/leds/PWR/brightness
	for DEV in /dev/input/event*; do
		runc add inputevent --long=2 "$DEV" `readlink -f "$0"` ctrl
	done
	runc add `readlink -f "$0"` amp
	;;
esac

