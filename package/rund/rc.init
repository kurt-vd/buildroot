#!/bin/sh

if [ "$1" = "-noinit" ]; then
	# protect against exec'd instance of rund
	exit 0;
fi

PATH=/usr/sbin:/sbin:/usr/bin:/bin

echo "[`ktstamp -k`] start system ..."
# export PATH to rund
runc env PATH="$PATH"
if [ -f /etc/environment ]; then
	. /etc/environment
	# push environment into rund
	sed -e "/^#/d" -e "/^$/d" /etc/environment | xargs -L1 -d\\n runc env
fi

# set reboot behaviour
sysreboot cadsoft

# mount necessary filesystems
mount -n -tproc proc /proc
mount -n -tsysfs sys /sys
mount -n -ttmpfs tmp /tmp
mount -n -ttmpfs run /run
chmod a+w,+t /tmp
chmod a+w,+t /run

# start device manager
DEVFS=`df -T /dev 2> /dev/null | tail -n1 | { read DEV TYPE REST; echo $TYPE; }`
if [ -z "$DEVFS" ]; then
	# DF does not find mountpoint for rootfs
	DEVFS=rootfs
fi
## DEVICE MANAGER START
## fdev START
echo "" > /proc/sys/kernel/hotplug
if [ "$DEVFS" != tmpfs -a "$DEVFS" != devtmpfs -a "$DEVFS" != rootfs ]; then
	mount -n -ttmpfs dev /dev
	mknod /dev/console c 5 1
	mknod /dev/null c 1 3
	mknod /dev/zero c 1 5
fi
runc add DETACH=0 fdev -b --wait=0
sockwait -r0.1 -f /dev/.fdev.coldplugged &
## fdev DONE
## devtmpfs START
if [ $DEVFS != devtmpfs ]; then
	mount -n -tdevtmpfs dev /dev
fi
## devtmpfs DONE
## udev START
echo "" > /proc/sys/kernel/hotplug
if [ $DEVFS != devtmpfs ]; then
	mount -n -tdevtmpfs dev /dev
fi
# code from slackware rc.udev
udevd --daemon
udevadm trigger --type=subsystems --action=add
udevadm trigger --type=devices --action=add
udevadm settle --timeout=120 &
## udev DONE
## DEVICE MANAGER DONE

# prepare /dev/shm
# /dev is always a TMPFS like filesystem
mkdir -p /dev/shm &

# prepare /dev/pts
mkdir -p /dev/pts
mount -n -tdevpts devpts /dev/pts

# if /dev was a rootfs type, then /media is on rootfs too
if [ -d /media -a $DEVFS != rootfs ]; then
	# mount tmpfs for media mount points
	mount -n -ttmpfs nodev /media
fi

ip link set lo up
#ip addr add 127.0.0.1/8 dev lo

hostname -F /etc/hostname

# without device manager, add watchdog triggers here
for WDT in /dev/watchdog?; do runc watchdog add $WDT 1; done

echo "[`ktstamp -k`] restore state ..."

# remount /root read-write
# This will be commented by buildroot
# when BR2_TARGET_GENERIC_REMOUNT_RW is not set
mount -n /root -o remount,rw

# hardware clock
# not all systems come with an RTC ...
if [ -c /dev/rtc0 ]; then
	hwclock -s -l &
fi

# be warned, system time may not be good yet at this point
# you can't guarantee that /dev/rtc0 had a good battery ...
if [ -x /etc/persistentfs.sh ]; then
	/etc/persistentfs.sh
fi

# READY
echo "[`ktstamp -k`] Start services ..."
#runc add agetty -i -a root -L ttyS0 115200 vt100
runc add getty ttyS0 115200 vt100

# start services
for SVC in /etc/rc.local.d/*; do
	if [ -x "$SVC" ]; then
		"$SVC" "$@"
	fi
done

if [ -x /etc/rc.local ]; then
	echo "[`ktstamp -k`] run /etc/rc.local ..."
	/etc/rc.local "$@"
fi

if [ -x /opt/etc/rc.local ]; then
	echo "[`ktstamp -k`] run /opt/etc/rc.local ..."
	/opt/etc/rc.local "$@"
fi

echo "[`ktstamp -k`] system up"
